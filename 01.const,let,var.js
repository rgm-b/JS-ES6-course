//const MY_CONST = 1;
//MY_CONST = 2; //ошибка - нельзя изменять константы у всех примитивных типов данных
	


//у констант можно менять внутренние элементы в массивах
// const MY_CONST = [1, 2, 3];
// MY_CONST[0] = 10; // [10, 2, 3]
// MY_CONST = {}; //Ошибка - не можем менять тип данных у констант


//у констант можно менять значения в объектах
MY_CONST = {
	name: 'John'
}
MY_CONST.name = 'Mike';  // {name: "Mike"}


// let и отличия let от  var

let any = 1;
any = 'Vasya'; //можно переприсваивать тип данных.

v = 1;
var v; //компилятор прочитывает объявление переменных через var - hoisting (подъём)
console.log(v); // 1
var v;
console.log(v); // 1
var v = 10; // можно создавать переменные с таким же именем
console.log(v); // 10
//let v; //нельзя создавать переменную с таким же названием,
//если она ранее была объявлена через var и наоборот - если была объявлена
//через let нельзя объявлять с тем же именем через var

e = 1;
let e;
//Cannot access 'e' before initialization
//нельзя получить достук к 'е' до её объявления (инициализации)


//		Отличие let от var в цикле for

for (var i = 0; i<5; i++){
	setTimeout( ()=> console.log(i), 2000);    
}
//вводя переменную через var мы создаём 1 лишь переменную, 
//которая передаётся по ссылке, когда пройдёт 2 секунды цикл
//выполнится и i будет принимать в себе значение 5

//лечение 1 обёрткой
for (var i = 0; i<5; i++){
	( (j)=> setTimeout( ()=> console.log(j), 2000)  )(i)  
}
//лечение 2 - меняем var на let
for (let i = 0; i<5; i++){
	setTimeout( ()=> console.log(i), 2000);    
}
//вводя переменную через let создаётся 1 лишь экземпляр,
//который определяется внутри {} далее он ждёт 2 секунды и отрабатывает
//console.log, после этого i++ (i увеличивается на 1), но создалась,
//через let новая переменная с новой ссылкой, соответственно
//в console.log передаётся уже другая переменная

//bundle при компиляции в ES-5 преобразовал ES-6 в:
//'use strict';
var _loop = function(i){
    setTimeout(function(){
        console.log(i);
    }, 2000);
};
for (var i = 0; i<5; i++){
	_loop(i);   
}
//обернул в функцию подобно тому как я сделал самовызывающейся
//стрелочной в "лечении 1"